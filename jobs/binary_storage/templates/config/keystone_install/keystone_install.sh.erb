#!/usr/bin/env bash

set -e
echo "---------------------------------------------Keystone Install Start"
JOB_NAME=binary_storage
KEYSTONE_CONF_DIR=/var/vcap/jobs/$JOB_NAME/helper/keystone_install
sudo cp /var/vcap/jobs/binary_storage/config/keystone/etc/keystone.conf /etc/keystone/
chown -R keystone:keystone /etc/keystone

#Create log folder
mkdir -p /var/vcap/store/log/keystone
chown -R keystone:keystone /var/vcap/store/log/keystone

#Populate Data into keystone DB
keystone-manage db_sync
sleep 5

chown -R keystone:keystone /var/vcap/store/log/keystone

#systemctl stop keystone
#sleep 1

#systemctl start keystone
#sleep 3

# keystone service -> apache2 service 
# apache2 default port change
sed -i "s/5000/<%=p('binary_storage.auth_port')%>/" /etc/apache2/sites-available/keystone.conf

<% if p("cce_enable") %>
# apache2 cce start
cceCodeCount=`cat /etc/apache2/apache2.conf | grep 'FollowSymLinks' | wc -l`

if [ ${cceCodeCount} -ne "0" ] ; then
  a2dissite 000-default.conf
  rm /etc/apache2/sites-available/000-default.conf
  rm /etc/apache2/sites-available/default-ssl.conf
  sed -i "s/Listen/#Listen/" /etc/apache2/ports.conf
  sed -i "s/Options FollowSymLinks/LimitRequestBody 5000000/" /etc/apache2/apache2.conf
  sed -i "s/Options Indexes FollowSymLinks/LimitRequestBody 5000000/" /etc/apache2/apache2.conf
fi
# apache2 cce end
<% end %>

systemctl restart apache2
sleep 3

keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

################################################

cd $KEYSTONE_CONF_DIR


function get_id () {
    echo `"$@" | grep ' id ' | awk '{print $4}'`
}


#
# Default tenant
#
echo "---------------------------------------------Endpoint Install Start"

if [[ -z "$DISABLE_ENDPOINTS" ]]; then
    keystone-manage bootstrap --bootstrap-password ADMIN_PASS \
    --bootstrap-admin-url http://localhost:<%=p('binary_storage.auth_port')%>/v3/ \
    --bootstrap-internal-url http://localhost:<%=p('binary_storage.auth_port')%>/v3/ \
    --bootstrap-public-url http://<%= link('binary_storage-link').instances[0].address%>:<%=p('binary_storage.auth_port')%>/v3/ \
    --bootstrap-region-id paasta
fi

echo "---------------------------------------------Endpoint Install End"

export OS_USERNAME=admin
export OS_PASSWORD=ADMIN_PASS
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://localhost:<%=p('binary_storage.auth_port')%>/v3
export OS_IDENTITY_API_VERSION=3

echo "---------------------------------------------Swift Project & User Install Start"
DEMO_TENANT=$(get_id openstack project create --description "Default project" demo)

ADMIN_USER=$(get_id openstack user create --password secret --project demo paasta)

#ADMIN_ROLE=$(get_id openstack role create admin)

openstack role add --project demo --user paasta admin

#
# Service tenant
#
SERVICE_TENANT=$(get_id openstack project create --description "Service Tenant" service)

SWIFT_USER=$(get_id openstack user create --password password --project service swift)

openstack role add --project service --user swift admin

#
# Keystone service
#
KEYSTONE_SERVICE=$(get_id openstack service create --description="Keystone Identity Service" --name=keystone identity)

echo "---------------------------------------------Swift Project & User Install End"


echo "---------------------------------------------------------------------"
echo "---------------------------------------------Keystone Install Success"
echo "---------------------------------------------------------------------"

