#!/bin/bash

set -e
set -u


SSH_PATH=/home/vcap/.ssh
KEYSTORE_PATH=/var/vcap/packages/java/jre/bin
SSL_KEY_PATH=<%= p('influxdb.ssl.keyPath')%>
SSL_PASSWORD=<%= p('influxdb.ssl.password')%>
WORKING_DIR=$(pwd)

if [ ! -d ${SSH_PATH} ]; then
  echo "mkdir VCAP SSH"
  mkdir ${SSH_PATH}
  chown -R vcap:vcap ${SSH_PATH}
fi

cp /var/vcap/jobs/paas-ta-portal-log-api/data/private_key.pem ${SSH_PATH}
sudo chmod 600 ${SSH_PATH}/private_key.pem
sudo chown -R vcap:vcap ${SSH_PATH}/private_key.pem 


cd ${KEYSTORE_PATH}


## Seperate certificate from pem
sed -n '/BEGIN CERTIFICATE/,/END CERTIFICATE/p' ${SSH_PATH}/private_key.pem > influx_cert.crt

## Seperate private key from pem
sed -n '/BEGIN RSA/,/END RSA/p' ${SSH_PATH}/private_key.pem > influx_private.key


## Create PKCS12
openssl pkcs12 -export -in influx_cert.crt -inkey influx_private.key -passin pass:${SSL_PASSWORD} -out keystore.p12 -name "keystore" -passout pass:${SSL_PASSWORD} -legacy

## Convert PKCS12 to KeyStore
./keytool -importkeystore -deststorepass ${SSL_PASSWORD} -destkeypass ${SSL_PASSWORD} -destkeystore truststore.jks -srckeystore keystore.p12 -srcstoretype PKCS12 -srcstorepass ${SSL_PASSWORD} -alias "keystore"


mv keystore.p12 truststore.jks ${SSL_KEY_PATH}

cd ${SSL_KEY_PATH}
sudo chown -R vcap:vcap keystore.p12
sudo chown -R vcap:vcap truststore.jks


cd ${WORKING_DIR}